// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealGimm.Infrastructure.Prop.Data;

#nullable disable

namespace RealGimm.Infra.MsSql.Prop
{
    [DbContext(typeof(PropDbContext))]
    partial class PropDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("prop")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealGimm.Core.Prop.AdministrationAggregate.Administration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdministrationType")
                        .HasColumnType("int");

                    b.Property<int?>("AdministratorBankAccountId")
                        .HasColumnType("int");

                    b.Property<int>("AdministratorSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("EstateId")
                        .HasColumnType("int");

                    b.Property<string>("ExternalCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsPaymentDataIncluded")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(3192)
                        .HasColumnType("nvarchar(3192)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Since")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("Until")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Administrations", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.AdministrationTermAggregate.AdministrationTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdministrationId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExpectedAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateOnly>("Since")
                        .HasColumnType("date");

                    b.Property<int>("TermType")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Until")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AdministrationId");

                    b.ToTable("AdministrationTerms", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.AdministrationTermAggregate.TermInstallment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdministrationTermId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("BillItemTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("InstallmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(3192)
                        .HasColumnType("nvarchar(3192)");

                    b.Property<DateOnly>("Since")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Until")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AdministrationTermId");

                    b.HasIndex("BillItemTypeId");

                    b.ToTable("TermInstallment", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.BillAggregate.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContractBillingPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EmissionType")
                        .HasColumnType("int");

                    b.Property<int?>("EstateUnitId")
                        .HasColumnType("int");

                    b.Property<string>("ExternalExportCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExternalSourceCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsInvoiced")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOccupiedWithoutRight")
                        .HasColumnType("bit");

                    b.Property<int>("MainCounterpartSubjectId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Since")
                        .HasColumnType("date");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("TransactorPaymentType")
                        .HasColumnType("int");

                    b.Property<int>("TransactorSubjectId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Until")
                        .HasColumnType("date");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Bills", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.BillAggregate.BillRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(3192)
                        .HasColumnType("nvarchar(3192)");

                    b.Property<int?>("OneshotAdditionSourceId")
                        .HasColumnType("int");

                    b.Property<int?>("RecurringAdditionSourceId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Since")
                        .HasColumnType("date");

                    b.Property<int?>("TermInstallmentSourceId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Until")
                        .HasColumnType("date");

                    b.Property<int>("VATRateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("OneshotAdditionSourceId");

                    b.HasIndex("RecurringAdditionSourceId");

                    b.HasIndex("TermInstallmentSourceId");

                    b.ToTable("BillRow", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.BillItemTypeAggregate.BillItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActiveExemptVRId")
                        .HasColumnType("int");

                    b.Property<int>("ActiveNonTaxableVRId")
                        .HasColumnType("int");

                    b.Property<int>("ActiveSubjectVRId")
                        .HasColumnType("int");

                    b.Property<int>("AdministrationVRId")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultAccountingItemId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsForAdministration")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForContractCosts")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForContractFee")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForTax")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPositive")
                        .HasColumnType("bit");

                    b.Property<int>("PassiveExemptVRId")
                        .HasColumnType("int");

                    b.Property<int>("PassiveNonTaxableVRId")
                        .HasColumnType("int");

                    b.Property<int>("PassiveSubjectVRId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BillItemTypes", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.ContractAggregate.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("AgreementDate")
                        .HasColumnType("date");

                    b.Property<int?>("AnytimeTerminationWarningMonths")
                        .HasColumnType("int");

                    b.Property<bool>("BillingAfterTerm")
                        .HasColumnType("bit");

                    b.Property<bool>("BillingAlignedToCalendarYear")
                        .HasColumnType("bit");

                    b.Property<bool>("BillingAppliesBaseFee")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BillingBaseFee")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("BillingBaseFeeBillItemTypeId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("BillingEndDate")
                        .HasColumnType("date");

                    b.Property<string>("BillingNotes")
                        .HasMaxLength(3192)
                        .HasColumnType("nvarchar(3192)");

                    b.Property<int?>("BillingPeriod")
                        .HasColumnType("int");

                    b.Property<DateOnly>("BillingStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("BillingVATRateType")
                        .HasColumnType("int");

                    b.Property<bool>("BillingWithSplitPayment")
                        .HasColumnType("bit");

                    b.Property<int?>("BillingWithStampTax")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EffectStartDate")
                        .HasColumnType("date");

                    b.Property<string>("ExternalCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("FirstTermDurationMonths")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("FirstTermExpirationDate")
                        .HasColumnType("date");

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsOccupiedWithoutRight")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("LastRenewalStartDate")
                        .HasColumnType("date");

                    b.Property<int>("ManagementSubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("NonRenewalWarningMonths")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(3192)
                        .HasColumnType("nvarchar(3192)");

                    b.Property<string>("PreviousCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<bool>("RecoverBillsAfterSuspension")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<int?>("ReleaseReason")
                        .HasColumnType("int");

                    b.Property<int?>("SecondTermDurationMonths")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("SecondTermExpirationDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SublocatedContractId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("TerminationDate")
                        .HasColumnType("date");

                    b.Property<int?>("Terminator")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillingBaseFeeBillItemTypeId");

                    b.HasIndex("InternalCode");

                    b.HasIndex("SublocatedContractId");

                    b.HasIndex("TypeId");

                    b.ToTable("Contracts", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.ContractAggregate.OneshotAddition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountingItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("BillItemTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int?>("Installments")
                        .HasColumnType("int");

                    b.Property<bool>("IsBoundToTermDay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRentalRateVariation")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(3192)
                        .HasColumnType("nvarchar(3192)");

                    b.Property<int?>("RegistrationPaymentId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("TermEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("TermStartDate")
                        .HasColumnType("date");

                    b.Property<int>("VATRateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillItemTypeId");

                    b.HasIndex("ContractId");

                    b.HasIndex("RegistrationPaymentId");

                    b.ToTable("OneshotAddition", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.ContractAggregate.RecurringAddition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountingItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountPerInstallment")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("BillItemTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int?>("ExcludeEndMonth")
                        .HasColumnType("int");

                    b.Property<int?>("ExcludeStartMonth")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(3192)
                        .HasColumnType("nvarchar(3192)");

                    b.Property<int>("VATRateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillItemTypeId");

                    b.HasIndex("ContractId");

                    b.ToTable("RecurringAddition", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.ContractTypeAggregate.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAbsoluteRevaluation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegistrationTax")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRentChargeApplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRevaluationApplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStampTax")
                        .HasColumnType("bit");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<int?>("RegistrationTaxIncomeType")
                        .HasColumnType("int");

                    b.Property<double?>("RegistrationTaxPercent")
                        .HasColumnType("float");

                    b.Property<double?>("RegistrationTaxTenantPercent")
                        .HasColumnType("float");

                    b.Property<int?>("RevaluationCalculationMonth")
                        .HasColumnType("int");

                    b.Property<int?>("RevaluationIndexMonth")
                        .HasColumnType("int");

                    b.Property<decimal?>("RevaluationRatePercent")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("UsageTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ContractTypes", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistrationOfficeAggregate.RegistrationOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("ExternalCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RegistrationOffices", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistrationPaymentAggregate.RegistrationPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<int>("PaymentYear")
                        .HasColumnType("int");

                    b.Property<decimal>("SanctionAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("TaxAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateOnly>("ValueDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("RegistrationPayments", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistrationPaymentAggregate.RegistrationPaymentRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AmountCleared")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("AmountDue")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentRowCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaymentRowReceivingEntity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaymentRowSection")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ReferencePeriod")
                        .HasColumnType("int");

                    b.Property<int>("ReferenceYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("RegistrationPaymentRow", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistryCommunicationAggregate.CommEstateUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CadastralAddressNumbering")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CadastralAddressToponymy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CadastralCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CadastralCoordinateLevel1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CadastralCoordinateLevel2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CadastralCoordinateLevel3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CadastralCoordinateLevel4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CadastralIncome")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("CadastreType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CommunicationIndex")
                        .HasColumnType("int");

                    b.Property<string>("EstatePartition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EstateUnitId")
                        .HasColumnType("int");

                    b.Property<string>("EstateUnitType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RegistryCommunicationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistryCommunicationId");

                    b.ToTable("CommEstateUnit", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistryCommunicationAggregate.RegistryCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttachedDocumentId")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ContractFee")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ContractSignatureDate")
                        .HasColumnType("date");

                    b.Property<string>("ContractType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryISO3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal?>("DebtAmount")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("DebtBankAccountId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsExcluded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPayingEntireContractFee")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSent")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberOfCopies")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RegistryFee")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("RegistryFeeInterest")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("RegistryFeePenalty")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("RegistryNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestingSubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestingSubjectLegalRepresentativeId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderSubjectId")
                        .HasColumnType("int");

                    b.Property<decimal?>("StampFee")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("StampFeeInterest")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("StampFeePenalty")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PaymentId");

                    b.ToTable("RegistryCommunications", "prop");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.AdministrationTermAggregate.AdministrationTerm", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.AdministrationAggregate.Administration", "Administration")
                        .WithMany("Terms")
                        .HasForeignKey("AdministrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administration");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.AdministrationTermAggregate.TermInstallment", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.AdministrationTermAggregate.AdministrationTerm", "AdministrationTerm")
                        .WithMany("Installments")
                        .HasForeignKey("AdministrationTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealGimm.Core.Prop.BillItemTypeAggregate.BillItemType", "BillItemType")
                        .WithMany()
                        .HasForeignKey("BillItemTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdministrationTerm");

                    b.Navigation("BillItemType");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.BillAggregate.Bill", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.ContractAggregate.Contract", "Contract")
                        .WithMany("Bills")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.BillAggregate.BillRow", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.BillAggregate.Bill", "Bill")
                        .WithMany("BillRows")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealGimm.Core.Prop.BillItemTypeAggregate.BillItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealGimm.Core.Prop.ContractAggregate.OneshotAddition", "OneshotAdditionSource")
                        .WithMany()
                        .HasForeignKey("OneshotAdditionSourceId");

                    b.HasOne("RealGimm.Core.Prop.ContractAggregate.RecurringAddition", "RecurringAdditionSource")
                        .WithMany()
                        .HasForeignKey("RecurringAdditionSourceId");

                    b.HasOne("RealGimm.Core.Prop.AdministrationTermAggregate.TermInstallment", "TermInstallmentSource")
                        .WithMany("Payments")
                        .HasForeignKey("TermInstallmentSourceId");

                    b.Navigation("Bill");

                    b.Navigation("ItemType");

                    b.Navigation("OneshotAdditionSource");

                    b.Navigation("RecurringAdditionSource");

                    b.Navigation("TermInstallmentSource");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.ContractAggregate.Contract", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.BillItemTypeAggregate.BillItemType", "BillingBaseFeeBillItemType")
                        .WithMany()
                        .HasForeignKey("BillingBaseFeeBillItemTypeId");

                    b.HasOne("RealGimm.Core.Prop.ContractAggregate.Contract", "SublocatedContract")
                        .WithMany("SubLocations")
                        .HasForeignKey("SublocatedContractId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RealGimm.Core.Prop.ContractTypeAggregate.ContractType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("RealGimm.Core.Prop.ContractAggregate.BillingPause", "BillingPauses", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<bool?>("IsRecoveryArrears")
                                .HasColumnType("bit");

                            b1.Property<string>("Notes")
                                .HasMaxLength(3192)
                                .HasColumnType("nvarchar(3192)");

                            b1.Property<DateOnly>("Since")
                                .HasColumnType("date");

                            b1.Property<DateOnly?>("Until")
                                .HasColumnType("date");

                            b1.HasKey("ContractId", "Id");

                            b1.ToTable("BillingPause", "prop");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsMany("RealGimm.Core.Prop.ContractAggregate.Counterpart", "Counterparts", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<double>("ContractSharePercent")
                                .HasColumnType("float");

                            b1.Property<bool>("IsMainCounterpart")
                                .HasColumnType("bit");

                            b1.Property<DateOnly>("Since")
                                .HasColumnType("date");

                            b1.Property<int>("SubjectId")
                                .HasColumnType("int");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.Property<DateOnly?>("Until")
                                .HasColumnType("date");

                            b1.HasKey("ContractId", "Id");

                            b1.ToTable("Counterpart", "prop");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsMany("RealGimm.Core.Prop.ContractAggregate.LocatedUnit", "LocatedUnits", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int?>("EstateSubUnitId")
                                .HasColumnType("int");

                            b1.Property<int>("EstateUnitId")
                                .HasColumnType("int");

                            b1.Property<bool>("IsMainUnit")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsPartialLocation")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsRegistryUpdateEnabled")
                                .HasColumnType("bit");

                            b1.Property<int?>("SurfaceSqM")
                                .HasColumnType("int");

                            b1.HasKey("ContractId", "Id");

                            b1.ToTable("LocatedUnit", "prop");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsMany("RealGimm.Core.Prop.ContractAggregate.RatePlan", "RatePlans", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<bool>("IsDeclarationExpected")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsDeclared")
                                .HasColumnType("bit");

                            b1.Property<decimal>("NewYearlyRate")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.Property<DateOnly>("Since")
                                .HasColumnType("date");

                            b1.HasKey("ContractId", "Id");

                            b1.ToTable("RatePlan", "prop");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsOne("RealGimm.Core.Prop.ContractAggregate.RegistrationTax", "RegistrationTaxData", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<string>("ContractRegistrationCode")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<int?>("Exemptions")
                                .HasColumnType("int");

                            b1.Property<DateOnly?>("FirstOnlineRegistrationDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly?>("FirstRegistrationDate")
                                .HasColumnType("date");

                            b1.Property<int>("FirstRegistrationPeriod")
                                .HasColumnType("int");

                            b1.Property<int?>("IncomeType")
                                .HasColumnType("int");

                            b1.Property<int?>("IncomeTypeRLI")
                                .HasColumnType("int");

                            b1.Property<bool>("IsAccountingManaged")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsRLIModeEnabled")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsTakeoverFromPreviousSubject")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsVoluntarySanctionApplied")
                                .HasColumnType("bit");

                            b1.Property<DateOnly?>("LastOnlinePaymentDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly?>("LastPaymentDate")
                                .HasColumnType("date");

                            b1.Property<int>("NumberOfCopies")
                                .HasColumnType("int");

                            b1.Property<int>("NumberOfPages")
                                .HasColumnType("int");

                            b1.Property<int>("PaymentType")
                                .HasColumnType("int");

                            b1.Property<string>("RegistrationNumber")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<int?>("RegistrationOfficeId")
                                .HasColumnType("int");

                            b1.Property<string>("RegistrationSerialNumber")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<int?>("RegistrationYear")
                                .HasColumnType("int");

                            b1.Property<string>("RequestCode")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<int?>("SpecialCase")
                                .HasColumnType("int");

                            b1.Property<DateOnly?>("TakeoverDate")
                                .HasColumnType("date");

                            b1.Property<int?>("TakeoverLegalRepresentativeSubjectId")
                                .HasColumnType("int");

                            b1.Property<string>("TakeoverOriginalSubjectIds")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("TakeoverType")
                                .HasColumnType("int");

                            b1.Property<decimal>("TaxableRateRatioPercent")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.Property<decimal>("TenantShareOfStampTaxPercent")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.Property<decimal>("TenantTaxSharePercent")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.Property<decimal?>("TransferResolutionAmount")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.HasKey("ContractId");

                            b1.HasIndex("RegistrationOfficeId");

                            b1.ToTable("Contracts", "prop");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");

                            b1.HasOne("RealGimm.Core.Prop.RegistrationOfficeAggregate.RegistrationOffice", "RegistrationOffice")
                                .WithMany()
                                .HasForeignKey("RegistrationOfficeId")
                                .OnDelete(DeleteBehavior.Restrict);

                            b1.Navigation("RegistrationOffice");
                        });

                    b.OwnsOne("RealGimm.Core.Prop.ContractAggregate.Revaluation", "RevaluationData", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<decimal?>("BaseRevaluationRate")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.Property<bool>("IsAbsoluteRevaluationApplied")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsBackHistoryEnabled")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsRevaluationCalculated")
                                .HasColumnType("bit");

                            b1.Property<DateOnly>("NextApplicationDate")
                                .HasColumnType("date");

                            b1.Property<int>("RateType")
                                .HasColumnType("int");

                            b1.Property<DateOnly>("ReferencePeriodEnd")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("ReferencePeriodStart")
                                .HasColumnType("date");

                            b1.Property<int>("RevaluationPeriodMonths")
                                .HasColumnType("int");

                            b1.Property<decimal>("RevaluationSharePercent")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contracts", "prop");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsMany("RealGimm.Core.Prop.ContractAggregate.RevaluationHistory", "RevaluationHistories", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<decimal>("BaseYearlyRate")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.Property<decimal>("IndexPercent")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.Property<decimal>("RevaluationAmount")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.Property<DateOnly>("Since")
                                .HasColumnType("date");

                            b1.Property<decimal>("YearlyRateWithRevaluation")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.HasKey("ContractId", "Id");

                            b1.ToTable("RevaluationHistory", "prop");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsMany("RealGimm.Core.Prop.ContractAggregate.SecurityDeposit", "SecurityDeposits", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int?>("BankAccountId")
                                .HasColumnType("int");

                            b1.Property<decimal>("BaseAmount")
                                .HasPrecision(18, 6)
                                .HasColumnType("decimal(18,6)");

                            b1.Property<DateOnly?>("InterestCalculationEndDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly?>("InterestCalculationStartDate")
                                .HasColumnType("date");

                            b1.Property<bool>("IsInterestCalculated")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsSuretyRenewable")
                                .HasColumnType("bit");

                            b1.Property<string>("Notes")
                                .HasMaxLength(3192)
                                .HasColumnType("nvarchar(3192)");

                            b1.Property<DateOnly?>("Since")
                                .HasColumnType("date");

                            b1.Property<int?>("SubjectId")
                                .HasColumnType("int");

                            b1.Property<int?>("SuretySubjectId")
                                .HasColumnType("int");

                            b1.Property<DateOnly?>("TakeoverDate")
                                .HasColumnType("date");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.Property<DateOnly?>("Until")
                                .HasColumnType("date");

                            b1.HasKey("ContractId", "Id");

                            b1.ToTable("SecurityDeposit", "prop");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");

                            b1.OwnsMany("RealGimm.Core.Prop.ContractAggregate.SecurityDepositInterestRow", "InterestRows", b2 =>
                                {
                                    b2.Property<int>("SecurityDepositContractId")
                                        .HasColumnType("int");

                                    b2.Property<int>("SecurityDepositId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<decimal>("AppliedInterestRate")
                                        .HasPrecision(18, 6)
                                        .HasColumnType("decimal(18,6)");

                                    b2.Property<decimal>("BaseAmount")
                                        .HasPrecision(18, 6)
                                        .HasColumnType("decimal(18,6)");

                                    b2.Property<DateOnly>("CalculationDate")
                                        .HasColumnType("date");

                                    b2.Property<decimal>("InterestAmount")
                                        .HasPrecision(18, 6)
                                        .HasColumnType("decimal(18,6)");

                                    b2.Property<DateOnly?>("Since")
                                        .HasColumnType("date");

                                    b2.Property<DateOnly?>("Until")
                                        .HasColumnType("date");

                                    b2.HasKey("SecurityDepositContractId", "SecurityDepositId", "Id");

                                    b2.ToTable("SecurityDepositInterestRow", "prop");

                                    b2.WithOwner()
                                        .HasForeignKey("SecurityDepositContractId", "SecurityDepositId");
                                });

                            b1.Navigation("InterestRows");
                        });

                    b.OwnsMany("RealGimm.Core.Prop.ContractAggregate.Takeover", "Takeovers", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateOnly>("EffectiveDate")
                                .HasColumnType("date");

                            b1.Property<int?>("LegalRepresentativeSubjectId")
                                .HasColumnType("int");

                            b1.Property<int>("NewSubjectId")
                                .HasColumnType("int");

                            b1.Property<int>("OriginalSubjectId")
                                .HasColumnType("int");

                            b1.Property<DateOnly>("TakeoverDate")
                                .HasColumnType("date");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.HasKey("ContractId", "Id");

                            b1.ToTable("Takeover", "prop");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsMany("RealGimm.Core.Prop.ContractAggregate.Transactor", "Transactors", b1 =>
                        {
                            b1.Property<int>("ContractId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("AddressId")
                                .HasColumnType("int");

                            b1.Property<int>("InvoiceAddressId")
                                .HasColumnType("int");

                            b1.Property<bool>("IsInvoiced")
                                .HasColumnType("bit");

                            b1.Property<DateOnly>("Since")
                                .HasColumnType("date");

                            b1.Property<int>("SubjectId")
                                .HasColumnType("int");

                            b1.Property<double>("TransactionSharePercent")
                                .HasColumnType("float");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.Property<DateOnly?>("Until")
                                .HasColumnType("date");

                            b1.HasKey("ContractId", "Id");

                            b1.ToTable("Transactor", "prop");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.Navigation("BillingBaseFeeBillItemType");

                    b.Navigation("BillingPauses");

                    b.Navigation("Counterparts");

                    b.Navigation("LocatedUnits");

                    b.Navigation("RatePlans");

                    b.Navigation("RegistrationTaxData");

                    b.Navigation("RevaluationData");

                    b.Navigation("RevaluationHistories");

                    b.Navigation("SecurityDeposits");

                    b.Navigation("SublocatedContract");

                    b.Navigation("Takeovers");

                    b.Navigation("Transactors");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.ContractAggregate.OneshotAddition", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.BillItemTypeAggregate.BillItemType", "BillItemType")
                        .WithMany()
                        .HasForeignKey("BillItemTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealGimm.Core.Prop.ContractAggregate.Contract", null)
                        .WithMany("OneshotAdditions")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealGimm.Core.Prop.RegistrationPaymentAggregate.RegistrationPayment", "RegistrationPayment")
                        .WithMany()
                        .HasForeignKey("RegistrationPaymentId");

                    b.Navigation("BillItemType");

                    b.Navigation("RegistrationPayment");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.ContractAggregate.RecurringAddition", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.BillItemTypeAggregate.BillItemType", "BillItemType")
                        .WithMany()
                        .HasForeignKey("BillItemTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RealGimm.Core.Prop.ContractAggregate.Contract", null)
                        .WithMany("RecurringAdditions")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillItemType");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistrationPaymentAggregate.RegistrationPayment", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.ContractAggregate.Contract", "Contract")
                        .WithMany("RegistrationPayments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistrationPaymentAggregate.RegistrationPaymentRow", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.RegistrationPaymentAggregate.RegistrationPayment", "Payment")
                        .WithMany("Rows")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistryCommunicationAggregate.CommEstateUnit", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.RegistryCommunicationAggregate.RegistryCommunication", null)
                        .WithMany("EstatesUnits")
                        .HasForeignKey("RegistryCommunicationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistryCommunicationAggregate.RegistryCommunication", b =>
                {
                    b.HasOne("RealGimm.Core.Prop.ContractAggregate.Contract", "Contract")
                        .WithMany("RegistryCommunications")
                        .HasForeignKey("ContractId");

                    b.HasOne("RealGimm.Core.Prop.RegistrationOfficeAggregate.RegistrationOffice", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId");

                    b.HasOne("RealGimm.Core.Prop.RegistrationPaymentAggregate.RegistrationPayment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.OwnsMany("RealGimm.Core.Prop.RegistryCommunicationAggregate.RegistryCommunicationAnomaly", "Anomalies", b1 =>
                        {
                            b1.Property<int>("RegistryCommunicationId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(3192)
                                .HasColumnType("nvarchar(3192)");

                            b1.HasKey("RegistryCommunicationId", "Id");

                            b1.ToTable("RegistryCommunicationAnomaly", "prop");

                            b1.WithOwner()
                                .HasForeignKey("RegistryCommunicationId");
                        });

                    b.OwnsOne("RealGimm.Core.Prop.RegistryCommunicationAggregate.RegistryCommunicationReceipt", "Receipt", b1 =>
                        {
                            b1.Property<int>("RegistryCommunicationId")
                                .HasColumnType("int");

                            b1.Property<string>("ContractAssignedNumber")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("FailureMessage")
                                .HasMaxLength(3192)
                                .HasColumnType("nvarchar(3192)");

                            b1.Property<bool>("IsSuccessful")
                                .HasColumnType("bit");

                            b1.Property<string>("RegistrationNumber")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("RegistrationSeries")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("RegistryCommunicationId");

                            b1.ToTable("RegistryCommunications", "prop");

                            b1.WithOwner()
                                .HasForeignKey("RegistryCommunicationId");
                        });

                    b.Navigation("Anomalies");

                    b.Navigation("Contract");

                    b.Navigation("Office");

                    b.Navigation("Payment");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.AdministrationAggregate.Administration", b =>
                {
                    b.Navigation("Terms");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.AdministrationTermAggregate.AdministrationTerm", b =>
                {
                    b.Navigation("Installments");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.AdministrationTermAggregate.TermInstallment", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.BillAggregate.Bill", b =>
                {
                    b.Navigation("BillRows");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.ContractAggregate.Contract", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("OneshotAdditions");

                    b.Navigation("RecurringAdditions");

                    b.Navigation("RegistrationPayments");

                    b.Navigation("RegistryCommunications");

                    b.Navigation("SubLocations");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistrationPaymentAggregate.RegistrationPayment", b =>
                {
                    b.Navigation("Rows");
                });

            modelBuilder.Entity("RealGimm.Core.Prop.RegistryCommunicationAggregate.RegistryCommunication", b =>
                {
                    b.Navigation("EstatesUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
