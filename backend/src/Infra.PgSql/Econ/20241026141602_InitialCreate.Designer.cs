// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealGimm.Infrastructure.Econ.Data;

#nullable disable

namespace RealGimm.Infra.PgSql.Econ
{
    [DbContext(typeof(EconDbContext))]
    [Migration("20241026141602_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("econ")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RealGimm.Core.Econ.InvoiceAggregate.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("EstateUnitId")
                        .HasColumnType("integer");

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("PaymentTerms")
                        .HasMaxLength(3192)
                        .HasColumnType("character varying(3192)");

                    b.Property<DateOnly?>("Since")
                        .HasColumnType("date");

                    b.Property<int?>("TransactorBankAccountId")
                        .HasColumnType("integer");

                    b.Property<int>("TransactorPaymentType")
                        .HasColumnType("integer");

                    b.Property<int>("TransactorSubjectId")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("Until")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Invoices", "econ");
                });

            modelBuilder.Entity("RealGimm.Core.Econ.InvoiceAggregate.PaymentInstallment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("InstallmentNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasMaxLength(3192)
                        .HasColumnType("character varying(3192)");

                    b.Property<DateOnly?>("Since")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("Until")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("PaymentInstallment", "econ");
                });

            modelBuilder.Entity("RealGimm.Core.Econ.TaxCreditAggregate.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 6)
                        .HasColumnType("numeric(18,6)");

                    b.Property<int?>("AssetTaxPaymentId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .HasMaxLength(3192)
                        .HasColumnType("character varying(3192)");

                    b.Property<DateOnly?>("Since")
                        .HasColumnType("date");

                    b.Property<int?>("TaxCreditId")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("Until")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("TaxCreditId");

                    b.ToTable("Operation", "econ");
                });

            modelBuilder.Entity("RealGimm.Core.Econ.TaxCreditAggregate.TaxCredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<int>("ManagementSubjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasMaxLength(3192)
                        .HasColumnType("character varying(3192)");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("TaxCredits", "econ");
                });

            modelBuilder.Entity("RealGimm.Core.Econ.InvoiceAggregate.PaymentInstallment", b =>
                {
                    b.HasOne("RealGimm.Core.Econ.InvoiceAggregate.Invoice", null)
                        .WithMany("PaymentInstallments")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("RealGimm.Core.Econ.TaxCreditAggregate.Operation", b =>
                {
                    b.HasOne("RealGimm.Core.Econ.TaxCreditAggregate.TaxCredit", null)
                        .WithMany("Operations")
                        .HasForeignKey("TaxCreditId");
                });

            modelBuilder.Entity("RealGimm.Core.Econ.InvoiceAggregate.Invoice", b =>
                {
                    b.Navigation("PaymentInstallments");
                });

            modelBuilder.Entity("RealGimm.Core.Econ.TaxCreditAggregate.TaxCredit", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
